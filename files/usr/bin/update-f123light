#!/bin/bash
#
# Copyright 2018, F123 Consulting, <information@f123.org>
# Copyright 2018, Kyle, <kyle@free2.ml>
#
# This is free software; you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free
# Software Foundation; either version 3, or (at your option) any later
# version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this package; see the file COPYING.  If not, write to the Free
# Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
#--code--

# the gettext essentials
export TEXTDOMAIN=update-f123light
export TEXTDOMAINDIR=/usr/share/locale

. gettext.sh

# Import the standard F123Light functions
. /usr/lib/F123-includes/script_functions.sh

# Incremental update timestamp function
# Determine whether to perform the update that calls this function.
# Return false if the time in yymmddhhmm format is not later than /etc/build-timestamp
# Otherwise write the new timestamp and return 0 so that the update is performed.
# on the calling system.
update () {
	local updateTime=$1
	local lastUpdated=$(cat /etc/timestamp-F123Light 2> /dev/null)
	lastUpdated=${lastUpdated:-0}
	if [[ $updateTime -gt $lastUpdated ]]; then
		echo $updateTime | sudo dd of=/etc/timestamp-F123Light status=none
	else
		return 100
    fi
	return 0
}

reboot_prompt () {
    # Prompt the user to reboot just in case something like the kernel that deserves a reboot has been updated.
    # We will prompt for a keypress. Enter to reboot, escape to exit the script and return to the shell or calling script.
    local $key
    clear
    key=$(yesno "$(gettext "Your system has been updated. Although usually not necessary, it may help to reboot. Would you like to do this now? Press enter to reboot, or escape to finish the update without rebooting.")")
        case $key in
            "Yes")
                systemctl reboot
            ;;
            "No")
            ;;
        esac
}

# Default files-F123Light git branch to be cloned
branch=master

# test to determine whether to prompt for a reboot, initially false
reboot=false

# Get command line options
if ! options=$(getopt -o b:h -l branch:,help, -n "update-f123light" -- "$@"); then
	exit 1
fi

eval set -- "$options"

while test $# -gt 0; do
	case $1 in
		-b|--branch)
			branch="$2"
			shift 2
		;;
		-h|--help)
			cat <<-HELP
				$(gettext "Usage")
				$(eval_gettext "\$name [options...]")
				$(gettext "Options")
				-h, --help: $(gettext "Print this help message and exit")
				-b <branch>, --branch=<branch>: $(eval_gettext "Get files from the specified git branch, default: \$branch")
			HELP
			exit 0
		;;
		(--)
			shift
		;;
		(*)
			echo $(basename $0): $1 $(gettext "not recognized") 1>&2
			exit 1
		;;
	esac
done

clear

# Due to the nature of system updates, this script may ask for the user's password more than once.
# Try to minimize user fears with a friendly message.
msgbox "$(gettext "You are updating your system, which may ask you for your password more than once. Don't be alarmed; this is perfectly normal. Press the enter key to continue.")"

# Update all ALARM and F123 maintained packages on the system.
infobox "$(gettext "Updating system software...")"
yes | sudo pacman -Syu --noconfirm |& grep -iq 'nothing to do' || reboot=true
clear

infobox "$(gettext "Updating configuration and other files...")"

# Cleanup just in case there is a temporary file repository left behind from a previous update.
sudo rm -Rf /tmp/F123Light

# Clone the files-F123Light git repository.
git clone -q -b $branch https://github.com/F123/files-F123Light.git /tmp/F123Light

 # Copy in the files. Only the files under files/usr should be copied
# to the system to avoid resetting configs modified by the system menu.
shopt -s dotglob
sudo cp -a /tmp/F123Light/files/usr/* /usr
# /boot is a special case on a Raspberry Pi, as it's an oldschool DOS partition.
sudo cp -R /tmp/F123Light/files/boot/* /boot

# Perform incremental updates
# They are found in scripts/updates.sh in the files-F123Light repository
# This file explains how to apply incremental updates, usage, formatting, etc.
clear
infobox "$(gettext "Performing incremental updates...")"
source /tmp/F123Light/scripts/updates.sh

# The temporary files downloaded from the F123Light git repository are no longer needed.
# Kill the clone.
sudo rm -Rf /tmp/F123Light

test $reboot = "true" && reboot_prompt
clear
msgbox "$(gettext "Update complete.")"
