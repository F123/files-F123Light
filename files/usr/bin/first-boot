#!/bin/bash
# FirstBoot
# A few preliminary steps that a user must take when boothing a new system for the first time
#
# Copyright 2018, F123 Consulting, <information@f123.org>
# Copyright 2018, Kyle, <kyle@free2.ml>
# Copyright 2018, Storm Dragon, <storm_dragon@linux-a11y.org>
#
# This is free software; you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free
# Software Foundation; either version 3, or (at your option) any later
# version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this package; see the file COPYING.  If not, write to the Free
# Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
#--code--

# Setup gettext
export TEXTDOMAIN=firstboot
export TEXTDOMAINDIR=/usr/share/locale
. gettext.sh

# Include F123-includes
for i in /usr/lib/F123-includes/*.sh ; do
    source $i
done

get_internet() {
    # Initial connection to wifi
    # Args: none
    # Returns: none
    fold -sw$cols <<-EOF
	$(gettext "In order to use the internet, you need to set up a network connection.
	If you already plugged in a wire that is connected directly to a router or modem, you don't need to do anything here.
	However, if you don't have a wire connected, but want to use the internet, you can configure the wireless network here.")
EOF
    while true; do
        #echo -n "$(gettext "Press enter to configure the wireless network, or escape to skip this step. ")"
        key="$(yesno "$(gettext "Would you like to configure the wireless network now?")")"
        echo
        case "$key" in
            "Yes")
                sudo configure-wifi
                break
            ;;
            "No")
                break
            ;;
        esac
    done
}

# Load the correct font.
# Load the correct custom keymap at boot if present
set_vconsole() {
    case "${LANG%%.*}" in
        *) fontName="lat2-16";;
    esac
    echo "FONT=${fontName}" | sudo tee "/etc/vconsole.conf" &> /dev/null
    if [[ -f "/usr/share/kbd/keymaps/i386/qwerty/${LANG%%.*}.map.gz" ]]; then
        echo "KEYMAP=${LANG%%.*}" | sudo tee -a "/etc/vconsole.conf" &> /dev/null
    fi
    sudo systemctl restart systemd-vconsole-setup.service &> /dev/null
}

setup_complete() {
# Final comments
# Left aligned so the text is prpperly formated when output to the screen.
# Args: none
# Returns: none
fold -sw$cols << EOF
	$(gettext "Initial F123 Light configuration is complete.
If you want to run this script again, just run
${0##*/}
at any time.
If you want to change your passwords again, run
configure-passwords
To reconfigure the wireless network, run
configure-wifi
To change speech options run
configure-speech")
EOF
# remove the firstboot file if it exists.
[[ -e ~/.firstboot ]] && rm ~/.firstboot
continue_prompt
}

# Synchronize repositories so that installations should go smoothly.
sudo pacman -Syy >& /dev/null
# Make sure basic xdg directory structure is in place:
xdg-user-dirs-update

# Add any user based systemd service files here. remember to redirect output.
systemctl --user enable --now recoll.service >& /dev/null
# Stop pulseaudio from autospawning which breaks sound horribly.
systemctl --user mask pulseaudio.socket >& /dev/null

# Call the functions that make up this script.
# I tried to make the functions descriptive as to what they do.
# See comments in the functions themselves for details
[[ -f ~/.firstboot ]] && set_vconsole
# Show quick start
show_doc "/usr/share/doc/F123/${LANG}/quickstart.txt"
[[ "$(yesno "$(gettext "Do you want to change passwords for users of this system?")")" == "Yes" ]] && /usr/lib/F123-wrappers/configure-passwords.sh
get_internet
# Install option speech providers
for i in mbrola ; do
    [[ "$(yesno "$(gettext "Do you want to install $i voices?")")" == "Yes" ]] && sudo /usr/lib/F123-wrappers/install-${i}.sh
done
[[ "$(yesno "$(gettext "Do you want to change security options for this system?")")" == "Yes" ]] && /usr/lib/F123-wrappers/configure-security.sh
setup_complete
